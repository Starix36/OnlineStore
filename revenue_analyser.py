import pandas as pd
import logging

class RevenueAnalyzer:
    def __init__(self, file_path):
        self.file_path = file_path
        self.data = None
        self.logger = logging.getLogger(__name__)  # Logger for the class

        # Configure logging level and output format
        logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')

    def load_data(self):
        try:
            self.data = pd.read_csv(self.file_path)
            self.data['order_date'] = pd.to_datetime(self.data['order_date'])
            return True
        except FileNotFoundError:
            self.logger.error("File not found.")
            return False
        except Exception as e:
            self.logger.error(f"Error loading data: {e}")
            return False
    def revenue_by_month(self):
        if self.data is None:
            return None
        revenue_by_month = self.data.groupby(self.data['order_date'].dt.to_period('M'))['product_price'].sum()
        self.logger.info("Total revenue generated by the online store for each month:")
        self.logger.info(revenue_by_month)
        return revenue_by_month
    
    def revenue_by_product(self):
        if self.data is None:
            return None
        revenue_by_product = self.data.groupby('product_name')['product_price'].sum()
        self.logger.info("Total revenue generated by each product:")
        self.logger.info(revenue_by_product)
        return revenue_by_product
    
    def revenue_by_customer(self):
        if self.data is None:
            return None
        revenue_by_customer = self.data.groupby('customer_id')['product_price'].sum()
        self.logger.info("Total revenue generated by each customer:")
        self.logger.info(revenue_by_customer)
        return revenue_by_customer
    
    def top_10_customers(self):
        if self.data is None:
            return None
        top_10_customers = self.data.groupby('customer_id')['product_price'].sum().nlargest(10)
        self.logger.info("\nTop 10 customers by revenue generated:")
        self.logger.info(top_10_customers)
        return top_10_customers

if __name__ == "__main__":
    analyzer = RevenueAnalyzer('orders.csv')
    data_loaded = analyzer.load_data()

    if data_loaded:
        analyzer.revenue_by_month()
        analyzer.revenue_by_product()
        analyzer.revenue_by_customer()
        analyzer.top_10_customers()
    else:
        print("Data loading failed. Please check the file path or file format.")
